import java.awt.*;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

// Main Class
public class HouseRentalSystem {

    private static ArrayList<House> houseList = new ArrayList<>(); // Stores house details

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new LoginPage());
    }

    // Login Page
    static class LoginPage extends JFrame {
        LoginPage() {
            setTitle("Login");
            setSize(300, 150);
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            setLocationRelativeTo(null);

            // Layout and Components
            setLayout(new GridLayout(3, 2));
            JLabel lblUsername = new JLabel("Username:");
            JTextField txtUsername = new JTextField();
            JLabel lblPassword = new JLabel("Password:");
            JPasswordField txtPassword = new JPasswordField();
            JButton btnLogin = new JButton("Login");

            // Adding Components
            add(lblUsername);
            add(txtUsername);
            add(lblPassword);
            add(txtPassword);
            add(new JLabel()); // Empty cell
            add(btnLogin);

            // Login Action
            btnLogin.addActionListener(e -> {
                String username = txtUsername.getText();
                String password = new String(txtPassword.getPassword());
                if (username.equals("admin") && password.equals("admin")) {
                    dispose();
                    new MainMenu();
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid credentials!");
                }
            });

            setVisible(true);
        }
    }

    // Main Menu
    static class MainMenu extends JFrame {
        MainMenu() {
            setTitle("Main Menu");
            setSize(300, 200);
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            setLocationRelativeTo(null);

            // Layout and Buttons
            setLayout(new GridLayout(3, 1));
            JButton btnAddHouse = new JButton("Add House");
            JButton btnViewHouses = new JButton("View Houses");
            JButton btnExit = new JButton("Exit");

            // Adding Buttons
            add(btnAddHouse);
            add(btnViewHouses);
            add(btnExit);

            // Button Actions
            btnAddHouse.addActionListener(e -> new AddHouse());
            btnViewHouses.addActionListener(e -> new ViewHouses());
            btnExit.addActionListener(e -> System.exit(0));

            setVisible(true);
        }
    }

    // Add House Page
    static class AddHouse extends JFrame {
        AddHouse() {
            setTitle("Add House");
            setSize(400, 250);
            setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            setLocationRelativeTo(null);

            // Layout and Components
            setLayout(new GridLayout(4, 2));
            JLabel lblAddress = new JLabel("Address:");
            JTextField txtAddress = new JTextField();
            JLabel lblRent = new JLabel("Rent:");
            JTextField txtRent = new JTextField();
            JLabel lblOwner = new JLabel("Owner Name:");
            JTextField txtOwner = new JTextField();
            JButton btnAdd = new JButton("Add House");

            // Adding Components
            add(lblAddress);
            add(txtAddress);
            add(lblRent);
            add(txtRent);
            add(lblOwner);
            add(txtOwner);
            add(new JLabel()); // Empty cell
            add(btnAdd);

            // Add House Action
            btnAdd.addActionListener(e -> {
                String address = txtAddress.getText();
                String rent = txtRent.getText();
                String owner = txtOwner.getText();

                if (address.isEmpty() || rent.isEmpty() || owner.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please fill all fields!");
                } else {
                    houseList.add(new House(address, rent, owner));
                    JOptionPane.showMessageDialog(this, "House added successfully!");
                    dispose();
                }
            });

            setVisible(true);
        }
    }

    // View Houses Page with JTable
    static class ViewHouses extends JFrame {
        ViewHouses() {
            setTitle("View Houses");
            setSize(500, 300);
            setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            setLocationRelativeTo(null);

            // Table Model and JTable
            String[] columnNames = {"Address", "Rent", "Owner"};
            DefaultTableModel model = new DefaultTableModel(columnNames, 0);
            JTable table = new JTable(model);

            // Populate Table with House Data
            for (House house : houseList) {
                model.addRow(new Object[]{house.getAddress(), house.getRent(), house.getOwner()});
            }

            // Scroll Pane for Table
            JScrollPane scrollPane = new JScrollPane(table);
            add(scrollPane);

            setVisible(true);
        }
    }

    // House Class for Data Storage
    static class House {
        private String address;
        private String rent;
        private String owner;

        public House(String address, String rent, String owner) {
            this.address = address;
            this.rent = rent;
            this.owner = owner;
        }

        public String getAddress() {
            return address;
        }

        public String getRent() {
            return rent;
        }

        public String getOwner() {
            return owner;
        }
    }
}
